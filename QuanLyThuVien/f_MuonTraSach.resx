<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>